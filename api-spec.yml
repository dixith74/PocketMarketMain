swagger: '2.0'
info:
  description: REST API for Pocket market main module
  version: '1.0'
  title: POCKET MARKET APP
  termsOfService: Terms of service
  contact:
    name: Pocket market
    url: 'https://pm.com/about/'
    email: contact@pm.com
  license:
    name: Apache License Version 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8083'
basePath: /
tags:
  - name: negotiation-controller
    description: Negotiation Controller
  - name: products-controller
    description: Products Controller
  - name: orders-controller
    description: Orders Controller
paths:
  /address:
    post:
      tags:
        - products-controller
      summary: addDeliveryAddress
      operationId: addDeliveryAddressUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: adress
          description: adress
          required: true
          schema:
            $ref: '#/definitions/Address'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /categories:
    get:
      tags:
        - products-controller
      summary: getCatogiries
      operationId: getCatogiriesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/downloadFile/{fileName}':
    get:
      tags:
        - products-controller
      summary: downloadFile
      operationId: downloadFileUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: fileName
          in: path
          description: fileName
          required: true
          type: string
        - name: userId
          in: query
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /negotiate:
    post:
      tags:
        - negotiation-controller
      summary: negotiate
      operationId: negotiateUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: prdNgtn
          description: prdNgtn
          required: true
          schema:
            $ref: '#/definitions/Negotiation'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /orders:
    get:
      tags:
        - orders-controller
      summary: getOrders
      operationId: getOrdersUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userId
          in: query
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderWrapper'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - orders-controller
      summary: save
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order
          description: order
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/orders/{itemId}':
    put:
      tags:
        - orders-controller
      summary: updateOrderByprodcutId
      operationId: updateOrderByprodcutIdUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: itemId
          in: path
          description: itemId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/orders/{orderId}':
    get:
      tags:
        - orders-controller
      summary: getOrder
      operationId: getOrderUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderWrapper'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - orders-controller
      summary: delete
      operationId: deleteUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          type: string
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /products:
    get:
      tags:
        - products-controller
      summary: getProducts
      operationId: getProductsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: location
          in: query
          description: location
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - products-controller
      summary: saveProduct
      operationId: saveProductUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: product
          description: product
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/products/{prodId}':
    get:
      tags:
        - products-controller
      summary: getProduct
      operationId: getProductUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: prodId
          in: path
          description: prodId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - products-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: prodId
          in: path
          description: prodId
          required: true
          type: integer
          format: int64
        - in: body
          name: product
          description: product
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - products-controller
      summary: delete
      operationId: deleteUsingDELETE_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: prodId
          in: path
          description: prodId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /upload:
    post:
      tags:
        - products-controller
      summary: handleFileUpload
      operationId: handleFileUploadUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: file
          in: formData
          description: file
          required: true
          type: file
        - name: userId
          in: query
          description: userId
          required: true
          type: integer
          format: int64
        - name: itemId
          in: query
          description: itemId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Negotiation:
    type: object
    properties:
      amount:
        type: number
        format: double
      ngtn_by_cstr_id:
        type: integer
        format: int64
      ngtn_id:
        type: integer
        format: int64
      order_currency:
        type: string
      order_id:
        type: integer
        format: int64
      order_placed_cstr_id:
        type: integer
        format: int64
      prod_id:
        type: integer
        format: int64
  OrderWrapper:
    type: object
    properties:
      category_name:
        type: string
      grade:
        type: integer
        format: int32
      image:
        type: string
      item_desc:
        type: string
      item_name:
        type: string
      location:
        type: string
      order_id:
        type: integer
        format: int64
      order_status:
        type: string
      prduct_id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      qty:
        type: integer
        format: int32
      units:
        type: string
      user_id:
        type: integer
        format: int64
  Address:
    type: object
    properties:
      address_id:
        type: integer
        format: int64
      address_one:
        type: string
      address_two:
        type: string
      city:
        type: string
      country:
        type: string
      deliver_by_me:
        type: boolean
      first_name:
        type: string
      last_name:
        type: string
      pincode:
        type: string
      state:
        type: string
      street:
        type: string
      user_id:
        type: integer
        format: int64
  InputStream:
    type: object
  Resource:
    type: object
    properties:
      description:
        type: string
      file:
        type: file
      filename:
        type: string
      input_stream:
        $ref: '#/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        $ref: '#/definitions/URI'
      url:
        $ref: '#/definitions/URL'
  Product:
    type: object
    properties:
      availability:
        type: boolean
      category_id:
        type: integer
        format: int64
      category_name:
        type: string
      grade:
        type: integer
        format: int32
      image:
        type: string
      item_desc:
        type: string
      item_name:
        type: string
      location:
        type: string
      order_id:
        type: integer
        format: int64
      prduct_id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      qty:
        type: integer
        format: int32
      rating:
        type: number
        format: double
      units:
        type: string
      user_id:
        type: integer
        format: int64
      user_name:
        type: string
  File:
    type: object
    properties:
      absolute:
        type: boolean
      absolute_file:
        type: file
      absolute_path:
        type: string
      canonical_file:
        type: file
      canonical_path:
        type: string
      directory:
        type: boolean
      file:
        type: boolean
      free_space:
        type: integer
        format: int64
      hidden:
        type: boolean
      name:
        type: string
      parent:
        type: string
      parent_file:
        type: file
      path:
        type: string
      total_space:
        type: integer
        format: int64
      usable_space:
        type: integer
        format: int64
  URI:
    type: object
    properties:
      absolute:
        type: boolean
      authority:
        type: string
      fragment:
        type: string
      host:
        type: string
      opaque:
        type: boolean
      path:
        type: string
      port:
        type: integer
        format: int32
      query:
        type: string
      raw_authority:
        type: string
      raw_fragment:
        type: string
      raw_path:
        type: string
      raw_query:
        type: string
      raw_scheme_specific_part:
        type: string
      raw_user_info:
        type: string
      scheme:
        type: string
      scheme_specific_part:
        type: string
      user_info:
        type: string
  URL:
    type: object
    properties:
      authority:
        type: string
      content:
        type: object
      default_port:
        type: integer
        format: int32
      file:
        type: string
      host:
        type: string
      path:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
      query:
        type: string
      ref:
        type: string
      user_info:
        type: string
